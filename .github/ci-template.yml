x-checkout-code: &checkout-code
  name: Checkout code
  uses: actions/checkout@v2
x-setup-node: &setup-node
  name: Setup node
  uses: actions/setup-node@v1
  with:
    node-version: '12.18'
x-setup-python: &setup-python
  name: Setup python
  uses: actions/setup-python@v1
  with:
    python-version: '3.8'
x-setup-aws: &setup-aws
  name: Setup AWS
  uses: aws-actions/configure-aws-credentials@v1
  with:
    aws-access-key-id: "${{ secrets.AWS_ACCESS_KEY_ID }}"
    aws-secret-access-key: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
    aws-region: us-east-2
x-setup-script: &setup-script
  name: Setup script
  run: ./.github/workflows/setup.sh
x-common-env: &common-env
  env:
    NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    <<: *common-env
    steps:
      - <<: *checkout-code
      - <<: *setup-node
      - <<: *setup-python
      - <<: *setup-script
      - run: yarn build
  lint:
    runs-on: ubuntu-latest
    name: Lint
    <<: *common-env
    steps:
      - <<: *checkout-code
      - <<: *setup-node
      - <<: *setup-python
      - <<: *setup-script
      - run: yarn lint
  test:
    runs-on: ubuntu-latest
    name: Test
    <<: *common-env
    steps:
      - <<: *checkout-code
      - <<: *setup-node
      - <<: *setup-python
      - <<: *setup-script
      - run: yarn test
  publish:
    if: github.ref == 'refs/heads/master'
    needs: ['build', 'test']
    runs-on: ubuntu-latest
    name: Publish
    <<: *common-env
    steps:
      - <<: *checkout-code
      - <<: *setup-node
      - <<: *setup-python
      - <<: *setup-script
      - run: yarn run lerna run publish from-package
  tag:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    name: Tag
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Tag @routerating/requests
        uses: butlerlogic/action-autotag@stable
        with:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          tag_prefix: "@routerating/requests@v"
          root: "packages/requests/package.json"
      - name: Tag @routerating/interfaces
        uses: butlerlogic/action-autotag@stable
        with:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          tag_prefix: "@routerating/interfaces@v"
          root: "packages/entities/package.json"
      - name: Tag @routerating/web
        uses: butlerlogic/action-autotag@stable
        with:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          tag_prefix: "@routerating/web@v"
          root: "apps/web/package.json"
      - name: Tag @routerating/scripts
        uses: butlerlogic/action-autotag@stable
        with:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          tag_prefix: "@routerating/scripts@v"
          root: "packages/scripts/package.json"
      - name: Tag @routerating/components
        uses: butlerlogic/action-autotag@stable
        with:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          tag_prefix: "@routerating/components@v"
          root: "packages/components/package.json"
  deploy-dev:
    if: github.ref == 'refs/heads/master'
    needs: [lint, test]
    runs-on: ubuntu-latest
    name: Deploy dev
    <<: *common-env
    steps:
      - <<: *checkout-code
      - <<: *setup-node
      - <<: *setup-python
      - <<: *setup-aws
      - <<: *setup-script
      - run: |
          JWT_SECRET=${{ secrets.JWT_SECRET }} \
          REFRESH_SECRET=${{ secrets.REFRESH_SECRET }} \
          yarn deploy:dev
  integration-test-remote:
    runs-on: ubuntu-latest
    needs: [deploy-dev]
    name: Integration test remote
    <<: *common-env
    steps:
      - <<: *checkout-code
      - <<: *setup-node
      - <<: *setup-python
      - <<: *setup-aws
      - <<: *setup-script
      - run: |
          JWT_SECRET=${{ secrets.JWT_SECRET }} \
          REFRESH_SECRET=${{ secrets.REFRESH_SECRET }} \
          TEST_VALID_BASIC_JWT=${{ secrets.TEST_VALID_BASIC_JWT }} \
          TEST_VALID_ADMIN_JWT=${{ secrets.TEST_VALID_ADMIN_JWT }} \
          TEST_INVALID_JWT=${{ secrets.TEST_INVALID_JWT }} \
          yarn test:int:dev
  deploy-prod:
    if: github.ref == 'refs/heads/master'
    needs: [integration-test-remote]
    runs-on: ubuntu-latest
    name: Deploy prod
    <<: *common-env
    steps:
      - <<: *checkout-code
      - <<: *setup-node
      - <<: *setup-python
      - <<: *setup-aws
      - <<: *setup-script
      - run: |
          JWT_SECRET=${{ secrets.JWT_SECRET }} \
          REFRESH_SECRET=${{ secrets.REFRESH_SECRET }} \
          yarn deploy:prod
  smoke-test:
    runs-on: ubuntu-latest
    needs: [deploy-prod]
    name: Smoke test
    <<: *common-env
    steps:
      - <<: *checkout-code
      - <<: *setup-node
      - <<: *setup-python
      - <<: *setup-aws
      - <<: *setup-script
      - run: |
          JWT_SECRET=${{ secrets.JWT_SECRET }} \
          REFRESH_SECRET=${{ secrets.REFRESH_SECRET }} \
          TEST_VALID_BASIC_JWT=${{ secrets.TEST_VALID_BASIC_JWT }} \
          TEST_VALID_ADMIN_JWT=${{ secrets.TEST_VALID_ADMIN_JWT }} \
          TEST_INVALID_JWT=${{ secrets.TEST_INVALID_JWT }} \
          yarn test:int:prod
